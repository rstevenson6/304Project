<%@ page import="java.sql.*" %>
<%@ page import="java.text.NumberFormat" %>
<%@ page import="java.util.HashMap" %>
<%@ page import="java.util.Iterator" %>
<%@ page import="java.util.ArrayList" %>
<%@ page import="java.util.Map" %>
<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF8"%>
<!DOCTYPE html>
<html>
<head>
<title>NeXt Order Processing</title>
</head>
<body>

<%@ include file="auth.jsp" %>


<% 
// Get customer id
//String custId = request.getParameter("customerId"); //Removed for login page test
String custId = session.getAttribute("authenticatedUser").toString();
@SuppressWarnings({"unchecked"})
HashMap<String, ArrayList<Object>> productList = (HashMap<String, ArrayList<Object>>) session.getAttribute("productList");

// Determine if valid customer id was entered
// Determine if there are products in the shopping cart
	//custId = "5"; //Test
boolean validId = false;
	
	
// If either are not true, display an error message

// Make connection
Connection con = null;
String url = "jdbc:sqlserver://sql04.ok.ubc.ca:1433;DatabaseName=db_dkandie;";
String uId = "dkandie";
String pw = "32056153";
//out.println("TESTING HERE "); 
try{ con = DriverManager.getConnection(url,uId,pw);

	/*
	if(custId==null||custId.equals("")){
	out.println("Invalid customer ID");
	validId=false;
	}else if (productList.isEmpty()){
	out.println("error: Product list is empty");
	validId=false;
	}else
	validId =true;
	/*
	String sql0 = "SELECT customerId FROM Customer";
	PreparedStatement pstmt0 = con.prepareStatement(sql0);
	ResultSet rset0= pstmt0.executeQuery();
	while(rset0.next()){
		if(rset0.getInt("customerId")==Integer.parseInt(custId)){
			validId=true;
			break;}
	}
	*/
	//if(true){ //CHANGED TO TEST login page test
	//Save order info to database 
	//NOTE: autogenerated Keys bit adds the oID
	String sql = "INSERT INTO Orders (uID) VALUES ("+Integer.parseInt(custId)+")";//can concantinate here as previously checked 
	PreparedStatement pstmt = con.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
	pstmt.executeUpdate();
	ResultSet keys = pstmt.getGeneratedKeys();
	keys.next();
	int orderId = keys.getInt(1);
	//pstmt.setInt(1,orderId); //Check these
	//out.println("1st Insert statement complete");
	//pstmt.executeQuery();
	
	// Insert each item into OrderedPart table using OrderId from previous INSERT
	String sql2 = "INSERT INTO OrderedPart VALUES (?,?,?,?)"; //4 values to add
	PreparedStatement pstmt2 = null;
	pstmt2 = con.prepareStatement(sql2);
	pstmt2.setInt(1,orderId); //DONE set Order Id 
	//add products from Array to Ordered Product
	Iterator<Map.Entry<String, ArrayList<Object>>> iterator = productList.entrySet().iterator();
	while (iterator.hasNext())
	{ 
		Map.Entry<String, ArrayList<Object>> entry = iterator.next();
		ArrayList<Object> product = (ArrayList<Object>) entry.getValue();
		String pID = (String) product.get(0);
		pstmt2.setInt(2,Integer.parseInt(pID));//DONE- set product ID
        String price = (String) product.get(2); 
		double pr = Double.parseDouble(price); 
		pstmt2.setDouble(4,pr); //DONE -set Price
		int qty = ( (Integer)product.get(3)).intValue();
		pstmt2.setInt(3,qty); //Done -set Quantity
		pstmt2.executeUpdate();
	}
	//out.println("2nd insert statement complete");
	out.println("<h1> Your Order is as follows </h1>");
	String sql3 = "SELECT OrderedPart.pID, pName, quantity, Part.price FROM OrderedPart, Part "
		     +"WHERE Part.pID=OrderedPart.pID AND oID = " + orderId;
	PreparedStatement pstmt3 = con.prepareStatement(sql3);
	ResultSet rset3 = pstmt3.executeQuery();
	out.println("<table><tr><th> Product ID</th> <th>Product Name</th> <th>Quantity</th> <th>Price</th> <th>Sub-Total</th></tr>");
	double subTotal = 0;
	double OTotal =0;
	while(rset3.next()){
		out.println(" <tr><td> "+rset3.getInt("pID")+"</td><td>"+rset3.getString("pName")+"</td><td> "+rset3.getInt("quantity")+"</td><td>"+rset3.getDouble("price")+"</td>");
		subTotal = rset3.getInt("quantity")*rset3.getDouble("price");
		OTotal = subTotal +OTotal;
		out.println("<td>"+subTotal+"</td></tr>");
	}
	out.println("<tr><td colspan=\"4\" align=\"right\"><b> Order Total: </b></td>");
	out.println("<td align=\"right\">"+OTotal+"</td></tr>");
	out.println("</table>");
	//out.println("<br> Order Total: " + OTotal);
	
	String sql4 = "UPDATE Orders SET itemTotal= "+OTotal+" WHERE oID= "+orderId;
	PreparedStatement pstmt4 = con.prepareStatement(sql4);
	pstmt4.executeUpdate();
	
	out.println("<h2> Your Order will be shipped soon! </h2>");
	out.println("<h3> Your order reference number is: "+orderId+"</h3>"); 
	//check from here
	String sql5 = "SELECT firstName FROM Customer WHERE uID LIKE "+custId;
	PreparedStatement pstmt5 = con.prepareStatement(sql5);
	ResultSet rset5 = pstmt5.executeQuery();
	rset5.next();
	out.println("<h4>This transaction has been automatically billed to your credit card account on file </h4>");
	out.println("<h4> Shipping to: "+rset5.getString("firstName")+" With the customer ID: "+ custId +"</h4>");
	session.removeAttribute("productList");
	out.println("<br> Forgotten something ?");
	out.println("<h2><a href=\"listprod.jsp\"> Continue Shopping</a></h2> ");
	//}else
	//	out.println("Invalid Id entered");
}catch(SQLException e){ out.println("SQL exception 1 (Order page): " + e.getMessage());}
finally{ 
	try{ if(con!=null)
		con.close();
	}catch (SQLException e){ out.println("SQL exception 2 (Order Page): " + e.getMessage());}
}

// Save order information to database


	/*
	// Use retrieval of auto-generated keys.
	PreparedStatement pstmt = con.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);			
	ResultSet keys = pstmt.getGeneratedKeys();
	keys.next();
	int orderId = keys.getInt(1);
	*/

// Insert each item into OrderedPart table using OrderId from previous INSERT

// Update total amount for order record

// Here is the code to traverse through a HashMap 
// Each entry in the HashMap is an ArrayList with item 0-id, 1-name, 2-quantity, 3-price CONFUSION HERE!

/*
	Iterator<Map.Entry<String, ArrayList<Object>>> iterator = productList.entrySet().iterator();
	while (iterator.hasNext())
	{ 
		Map.Entry<String, ArrayList<Object>> entry = iterator.next();
		ArrayList<Object> product = (ArrayList<Object>) entry.getValue();
		String pID = (String) product.get(0);
        String price = (String) product.get(2);
		double pr = Double.parseDouble(price);
		int qty = ( (Integer)product.get(3)).intValue();
            ...
	}
*/

// Print out order summary
%> 
</BODY>
</HTML>

